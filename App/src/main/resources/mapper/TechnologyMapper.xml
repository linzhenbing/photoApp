<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.Dao.TechnologyDao">
    <resultMap id="BaseResultMap" type="com.example.demo.Entity.Technology">
        <result column="id" property="id" />
        <result column="name" property="name" />
        <result column="video" property="video" />
        <result column="form" property="form" />
        <result column="createtime" property="createtime" />
        <result column="type" property="type" />
        <result column="remark" property="remark" />
    </resultMap>

    <select id="getTechList" resultMap="BaseResultMap>">
        select * from technology
    </select>

    <select id="getById" resultMap="BaseResultMap">
        select * from technology
        where id = #{id}
    </select>

    <select id="getListByName" resultMap="BaseResultMap">
        select * from technology
        where
        name like concat('%',#{name},'%')
    </select>

    <insert id="addTech" parameterType="com.example.demo.Entity.Technology">
        insert into technology(name, video, form, createtime, remark, type)
        values (#{name}, #{fileName}, #{form}, #{createtime}, #{remark}, #{type})
    </insert>

    <delete id="deleteById" parameterType="int">
        delete from technology where id = #{id}
    </delete>

    <update id="updateVideoWhithFileById" parameterType="com.example.demo.Entity.Technology">
        update technology
        set video = #{fileName}, form = #{form}, type = #{type}, remark = #{remark}, createtime = #{createtime}
        where id = #{id}
    </update>

    <update id="updateVideoWithoutFileById" parameterType="com.example.demo.Entity.Technology">
        update technology
        set form = #{form}, type = #{type}, remark = #{remark}, createtime = #{createtime}
        where id = #{id}
    </update>
</mapper>
