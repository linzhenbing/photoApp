<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.Dao.UserDao">
    <resultMap id="BaseResultMap" type="com.example.demo.Entity.User">
        <result column="id" property="id" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="state" property="state" />
        <result column="createtime" property="createtime" />
        <result column="reserved1" property="reserved1" />
        <result column="reserved2" property="reserved2" />
    </resultMap>

    <select id="getUser" resultMap="BaseResultMap" >
       select * from user
    </select>

    <select id="getUserByUserName" resultMap="BaseResultMap" >
           select * from user where username = #{username}
     </select>

    <select id="login" resultMap="BaseResultMap" >
           select * from user
           where
           username = #{user.username} and password = #{user.password} and type = #{user.type}
     </select>

    <select id="getRecordById" resultMap="BaseResultMap">
        select * from video where id = #{id}
    </select>

    <select id="sercahUser" resultMap="BaseResultMap">
        select * from user
        where
        username like concat('%',#{username},'%')
    </select>


    <update id="forbidUser" parameterType="String">
        update user
        set state = 0
        where
        username=#{username}
    </update>

    <update id="updateUser" parameterType="com.example.demo.Entity.User">
        update user
        set password = #{user.password}
        where
        username = #{user.username}
    </update>

    <update id="enableUser" parameterType="String">
        update user
        set state = 1
        where
        username=#{username}
    </update>

     <insert id="registered" parameterType="com.example.demo.Entity.User">
         insert into user(username,password,state,createtime,type)
         values (#{user.username},#{user.password},#{user.state},#{user.createtime},#{user.type})
     </insert>

    <delete id="deleteUser" parameterType="String">
        delete from user
        where username = #{username}
    </delete>


</mapper>
